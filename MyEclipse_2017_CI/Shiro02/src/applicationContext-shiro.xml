<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
      xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd"> 
  <!-- web.xml中shiro的filter对应的bean -->
  <!-- shiro的web过滤器 -->
  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"><!-- 生成工厂 -->
  	<property name="securityManager" ref="securityManager"/>
  	<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求地址将由formAuthenticationFilter进行表单认证 -->
  	<property name="loginUrl" value="/login.action"/><!-- 没有认证时执行的操作页面 -->
  	<property name="successUrl" value="/first.action"/><!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
  	<property name="unauthorizedUrl" value="/refuse.jsp"/><!-- 没有权限时执行的操作页面 -->
  	
  	<!-- 自定义表单认证器 -->
  		<property name="filters">
  			<map>
  				<!-- FormAuthenticationFilter是基于表单认证的过滤器 -->
  					<entry key="authc" value-ref="formAuthenticationFilter"/>
  			</map>
  		</property>
  	
  	
  	
  	<!-- 过滤器定义，从上向下顺序执行，一级将/**放在最下边 -->
  	<property name="filterChainDefinitions">	<!-- 真正过滤器生成 -->
  		<value>
  		<!-- 对静态资源设置匿名访问 -->
  		/images/** = anon
  		/js/** = anon
  		/styles/** anon
  		<!-- 验证码 -->
  		/validatecode.jsp=anon
  			<!-- 请求logout.action	shiro会清除session -->
  		/logout.action = logout
  		
  		<!-- 配置记住我或认证通过可以访问的地址,不能全部都能访问 -->
  		/index.jsp = user
  		/first.action = user
  		/login.jsp = user
  		<!-- 商品查询需要商品查询权限，取消url拦截配置，使用注解方式授权 -->
  		<!-- /items/queryItems.action = perms[item:query]
  		/items/editItems.action = perms[item:edit] -->
  		
  		<!--  /**=authc所有url都必须认证通过才可以访问  -->
  		/** = authc
  		<!-- /**=anon所有url都可以匿名访问 -->
  	
  		</value>
  	</property>
  </bean>
  <!-- securityManager 安全管理器-->
  	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> 
  		<property name="realm" ref="customRealm"/>
  		<!-- 注入缓存管理器 -->
  		<property name="cacheManager" ref="cacheManager"/>
  		<!-- 注入session管理器 -->
  		<property name="sessionManager" ref="sessionManager"/>
  		<!-- 记住我 -->
  			<property name="rememberMeManager" ref="rememberMeManager"/>
  	</bean>
    
    <!--将凭证匹配器设置到 realm中，realm就按照凭证匹配器的要求进行散列 -->
  <!-- 自定义realm -->
  <bean id="customRealm" class="com.hdquan.shiro.realm.CustomRealm">
  <property name="credentialsMatcher" ref="credentialsMatcher"/>
  </bean>

  <!-- 添加凭证匹配器 -->
  <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
  	<property name="hashAlgorithmName" value="md5"/>
  	<property name="hashIterations" value="1"/>
  </bean>
<!--缓存管理器  -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时长，单位毫秒 -->
		<property name="globalSessionTimeout" value="600000"/>
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true"/>
		
	</bean>
	
	<!-- 自定义form认证过滤器 -->
		<!-- 基于form表单的身份验证过滤器，不配置也会注册此过滤器，表单中的用户账号、密码及loginurl将采用默认值、建议配置 -->
			<bean id="formAuthenticationFilter" class="com.hdquan.shiro.realm.CustomFormAuthenticationFilter">
				<!-- 表单中账号的input名称 -->
					<property name="usernameParam" value="username"/>
					<!-- 表单中密码的input名称 -->
					<property name="passwordParam" value="password"/>
					<!-- 记住我input的名称 -->
					<property name="rememberMeParam" value="rememberMe"/>
			</bean>
	
	<!-- rememberMeManager管理器,写cookie，取出cookie生成用户信息 -->
		<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
			<property name="cookie" ref="rememberMeCookie"/>
		</bean>
		<!-- 记住我cookie -->
		<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- constructor-arg是指构造参数， rememberMe是cookie的名字-->
			<constructor-arg value="rememberMe"/>
			<!-- 记住我cookie生效时间30天 -->
			<property name="maxAge" value="2592000"/>
		</bean>
 </beans>