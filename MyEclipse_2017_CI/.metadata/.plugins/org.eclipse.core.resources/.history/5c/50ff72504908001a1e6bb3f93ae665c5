package com.controller;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.Service.ApplyService;
import com.Service.PointService;
import com.Service.UserService;
import com.Service.WorkService;
import com.pojo.Admin;
import com.pojo.Apply;
import com.pojo.Buser;
import com.pojo.Cuser;
import com.pojo.Point;
import com.pojo.User;
import com.pojo.Work;


@Controller
public class PointController {
	
	@Autowired
	private PointService pointService;
	
	@Autowired
	private WorkService workService;
	
	@Autowired
	private UserService userService;

	@Autowired
	private ApplyService applyService;
	
	@RequestMapping("NoOrHasScore_point.action")
	public void Noscore_point(HttpServletRequest req,HttpServletResponse res) throws IOException, ServletException
	{
		String user_name = (String)req.getServletContext().getAttribute("user_name");
		List<Apply> myApply = applyService.getMyApply(((User)userService.user(user_name)).getUser_ID());
		List<Work> myWork=new ArrayList<Work>();
		for(Apply apply:myApply)
		{
			if("passed".equals(apply.getApply_state()))
			{
				 myWork.add(workService.getWork(apply.getWork_id()));
			}
		}
		req.setAttribute("work", myWork);
		req.getRequestDispatcher("add_point.jsp").forward(req, res);
	}
	
	@RequestMapping("All_point.action")
	public void All_point(HttpServletRequest req,HttpServletResponse res) throws IOException, ServletException
	{
		req.setAttribute("point", pointService.getAllPoint());
		req.getRequestDispatcher("delete_point.jsp").forward(req, res);
	}
	
	@RequestMapping("My_point.action")
	public void My_point(HttpServletRequest req,HttpServletResponse res) throws IOException, ServletException
	{
		User User =(User) req.getServletContext().getAttribute("user");
		req.setAttribute("point", pointService.getMyPoint(User.getUser_ID()));
		req.getRequestDispatcher("get_point_record.jsp").forward(req, res);
	}
	
	@RequestMapping("add_point.action")
	public void add_point(HttpServletRequest req,HttpServletResponse res,String work_id,String point_score) throws IOException, ServletException
	{
		String user_name = (String)req.getServletContext().getAttribute("user_name");
		List<Work> myWork = workService.MyWork(((User)userService.user(user_name)).getUser_ID());
		Point Point=new Point();
		Point.setUser_id1(((User)userService.user(user_name)).getUser_ID());
		Point.setUser_id2((userService.getBuser(workService.getWork(work_id).getUser_id())).getUser_name());
		Point.setPoint_time(new SimpleDateFormat("MM/dd/yyyy HH:mm:ss").format(new Date()));
		Point.setPoint_score(Integer.parseInt(point_score));
		pointService.AddPoint(Point);
		req.setAttribute("work", myWork);
		req.getRequestDispatcher("point.jsp").forward(req, res);
	}
	
	@RequestMapping("delete_point.action")
	public void delete_point(HttpServletRequest req,HttpServletResponse res,String point_id) throws IOException, ServletException
	{
		pointService.DeletePoint(pointService.getPoint(point_id));
		req.getRequestDispatcher("point.jsp").forward(req, res);
	}
}
